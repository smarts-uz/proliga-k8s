apiVersion: v1
kind: Namespace
metadata:
  name: proliga
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proliga-frontend
  namespace: proliga
spec:
  replicas: 3 # best practice: multiple replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: proliga-frontend
  template:
    metadata:
      labels:
        app: proliga-frontend
    spec:
      containers:
        - name: frontend
          image: ramz001/proliga:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: static-files
              mountPath: /app/static
      volumes:
        - name: static-files
          persistentVolumeClaim:
            claimName: proliga-static-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proliga-ingress
  namespace: proliga
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: proliga.local # fake DNS
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proliga-frontend
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: proliga-static-pvc
  namespace: proliga
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: proliga-frontend
  namespace: proliga
spec:
  selector:
    app: proliga-frontend
  ports:
    - name: http
      port: 80        # service port (stable inside cluster)
      targetPort: 3000
  type: ClusterIP
